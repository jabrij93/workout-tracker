@import url('https://fonts.googleapis.com/css2?family=Asap:wght@400;500;700&display=swap');

:root {
    --color-default: #eef0f2;
    --color-invalid: red;
    --color-valid: green;
}

body {
    display: flex;
    flex:1;
}

.left-container {
    display: inline-flex;
    flex-direction: row;
    flex:1;
    position: relative;
}

.image {
    position: relative;
    text-align: center;
}

.image img {
    display: flex;
    flex:1;
    height:100vh;
    width: 35vw;
}

.bg-image {
    background: rgba(0, 0, 0, 0.5);
    position: absolute;
    width: 35vw;
    top: 240px;
    height: 200px;
    display: flex;
    justify-content: center;
}

.bg-image img {
    display: flex;
    justify-content: center;
}   

.caption {
    position: absolute;
    font-size: 16px;
    color: white;
    bottom: 14px;
    left: 33%;
}

span {
    text-decoration: underline;
}

.content-1 {
    display: flex;
    flex-direction: column;
    font-family: 'Asap', sans-serif;
}

form .first-content {
    display: flex;
    flex-direction: column;
    flex: 1;
    font-size: 30px;
    font-weight: 500;
    width: 62vw;
    height: 100vh;
    background: #f9fafb;
    padding-left:60px;
}

.second-content {
    display: flex;
    flex-direction: column;
    background-color: white;
    font-size: 14px;
    font-weight: bold;
    color: gray;
    max-width: 45vw;
    padding: 0 60px 30px 60px;
}

h1 {
    font-size: 30px;
    color: #212b39;
    padding-bottom: 5px;
}

.required-user-info {
    display: flex;
    flex-wrap: wrap;
    justify-content: space-between;
}

ul {
    list-style: none;
    padding: 0;
    margin: 0;
}

.second-content .required-user-info .input-box {
    width: calc(100% / 2 - 20px);
}

li {
    margin: 8px 0 8px 0;
}

.input-box label {
    padding: 8px 0 8px 0;
}

.second-content .required-user-info input {
    background-color: #fffefe;
    height: 30px;
    border-radius: 7px;
    width: 100%;
    margin: 8px 0 8px 0;
    border: 2px solid var(--color-default);
    font-size: 14px;
}

.third-content {
    display: flex;
    flex-direction: column;
    flex: 1;
    background: #f9fafb;
    padding: 35px 60px 0 60px;
    font-size: 18px;
}

.third-content button {
    font-size: 18px;
    padding: 14px 60px;
    border-radius: 8px;
    background-color: #b76912;
    border: 2px solid #b76912;
    color: white;
    font-weight: bold;
}


p span {
    text-decoration: none;
    color: #a96b25
}

.error-message, .error-message2, .error-message3, .error-message4 {
    display: none;
    font-size: 12px ;
    font-weight: bold;
    color: var(--color-invalid);
    margin-top: 5px;
}

/* To demonstrate that the validations only happen on blur, we apply this malpractice */
input:focus {
    outline: none;
  }

  /* Only show invalid ring while not focused */
input:not(:focus):not(:placeholder-shown):invalid {
    border-color: var(--color-invalid);
  }

 input#first-name:not(:focus):not(:placeholder-shown):invalid ~ .error-message {
    display: block; 
  }

 input#last-name:not(:focus):not(:placeholder-shown):invalid ~ .error-message {
    display: block; 
  }

 input#email:not(:focus):not(:placeholder-shown):invalid ~ .error-message2 {
    display: block; 
  }

input#phone-number:not(:focus):not(:placeholder-shown):invalid ~ .error-message3 {
    display: block; 
  }
  
 input#password:not(:focus):not(:placeholder-shown):invalid ~ .error-message4 {
    display: block; 
  }

input#password2:not(:focus):not(:placeholder-shown):invalid ~ .error-message4 {
    display: block; 
  }

  /* Only show valid ring while not focused and if a value is entered */
  /* :empty won't work here as that targets elements that have no childeren. Therefore we abuse :placeholder-shown */
  input:not(:focus):not(:placeholder-shown):valid {
    border-color: var(--color-valid);
  }